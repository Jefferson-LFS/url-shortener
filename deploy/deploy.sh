#!/usr/bin/env bash


# Verificar se o nome da fun√ß√£o Lambda foi fornecido como argumento
if [ -z "$1" ]; then
  echo "Erro: Voc√™ deve fornecer o nome da fun√ß√£o Lambda como argumento!"
  echo "Uso: ./deploy.sh <NomeDaFuncaoLambda>"
  exit 1
fi

# Nome da fun√ß√£o Lambda
LAMBDA_FUNCTION_NAME="$1"

echo "üì¶  Gerando arquivo .jar do projeto ..."
cd ../
mvn clean package &> /dev/null
cd deploy

# Caminho para o arquivo .jar gerado
JAR_FILE_PATH=$(find "../target" -name "*.jar" ! -name "original-*.jar")

# Verificar se o arquivo .jar foi criado
if [ ! -f "$JAR_FILE_PATH" ]; then
  echo "‚ùå Erro: Arquivo .jar n√£o encontrado!"
  exit 1
fi

echo "üîÑ  Atualizando c√≥digo da fun√ß√£o Lambda ..."
aws lambda update-function-code \
  --function-name $LAMBDA_FUNCTION_NAME \
  --zip-file fileb://$JAR_FILE_PATH &> /dev/null

# Verificar se a atualiza√ß√£o foi bem-sucedida
if [ $? -eq 0 ]; then

  echo -e "‚úÖ  Upload do c√≥digo da fun√ß√£o Lambda realizado com sucesso.\n"

  # Obter informa√ß√µes da fun√ß√£o Lambda
  FUNCTION_INFO=$(aws lambda get-function --function-name $LAMBDA_FUNCTION_NAME)

  # Extrair a data e hora da √∫ltima modifica√ß√£o usando o comando jq
  LAST_MODIFIED=$(echo "$FUNCTION_INFO" | grep -o '"LastModified": "[^"]*' | grep -o '[^"]*$')

  # Exibir o nome da fun√ß√£o e a data/hora da √∫ltima modifica√ß√£o
  echo "Fun√ß√£o Lambda atualizada: $LAMBDA_FUNCTION_NAME"
  echo "√öltima modifica√ß√£o: $LAST_MODIFIED"
else
  echo "‚ùå Erro: Falha ao atualizar a fun√ß√£o Lambda!"
  exit 1
fi
